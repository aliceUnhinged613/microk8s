#!/usr/bin/python3

import sys
import textwrap
from pathlib import Path
from subprocess import run

import click

from utils import check_clustering

PARENT = Path(__file__).absolute().parent
ADDONS = {sh.with_suffix('').name[7:] for sh in PARENT.glob('actions/enable.*.sh')}


@click.command(context_settings={'ignore_unknown_options': True})
@click.argument('addons', nargs=-1, required=True)
def enable(addons):
    check_clustering()

    if all(a.split(':')[0] in ADDONS for a in addons) and len(addons) > 1:
        for addon in addons:
            addon, *args = addon.split(':')
            run([PARENT / ('actions/enable.%s.sh' % addon)] + args.split(';'))
    else:
        addon, *args = addons[0].split(':')

        if addon not in ADDONS:
            click.secho("Addon `%s` not found." % addon, fg='red', err=True)
            click.echo("The available addons are:\n - %s" % '\n - '.join(ADDONS), err=True)
            sys.exit(1)

        if args and addons[1:]:
            click.secho(
                click.style(
                    "Can't pass string arguments and flag arguments simultaneously!\n", fg='red'
                )
                + textwrap.dedent(
                    """
                    Enable an addon with only one argument style at a time:

                        microk8s.enable foo:'bar'
                    or

                        microk8s.enable foo --bar
                """
                ),
                err=True,
            )
            sys.exit(1)

        script = [PARENT / ('actions/enable.%s.sh' % addon)]
        if args:
            run(script + args)
        else:
            run(script + list(addons[1:]))


if __name__ == '__main__':
    enable(prog_name='microk8s enable')
